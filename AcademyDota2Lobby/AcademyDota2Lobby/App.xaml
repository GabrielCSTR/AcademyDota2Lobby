<Application x:Class="AcademyDota2Lobby.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:AcademyDota2Lobby"
             StartupUri="/Views/Pages/WLogin.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <!--MATERIAL DESIGN THEM-->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Red.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Blue.xaml" />

                <!--<ResourceDictionary Source="Assets/icons.xaml"/>-->

            </ResourceDictionary.MergedDictionaries>

            <!--#region STYLE BUTTONS-->
            <Style x:Key="MyFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Control}">
                            <Grid Margin="8">
                                <Ellipse
                    Name="r1"
                    Stroke="Black"
                    StrokeDashArray="2 2"
                    StrokeThickness="1"/>
                                <Border
                    Name="border"
                    Width="{TemplateBinding ActualWidth}"
                    Height="{TemplateBinding ActualHeight}"
                    BorderThickness="1"
                    CornerRadius="2"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CircleButtonClosed" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}"/>
                <Setter Property="Background" Value="#FFE83E3E"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Ellipse Fill="{TemplateBinding Background}"/>
                                <Ellipse>
                                    <Ellipse.Fill>
                                        <RadialGradientBrush>
                                            <GradientStop Offset="0" Color="#00000000"/>
                                            <GradientStop Offset="0.88" Color="#00000000"/>
                                            <GradientStop Offset="1" Color="#80000000"/>
                                        </RadialGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse Margin="10" x:Name="highlightCircle" >
                                    <Ellipse.Fill >
                                        <LinearGradientBrush >
                                            <GradientStop Offset="0" Color="#50FFFFFF"/>
                                            <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                            <GradientStop Offset="1" Color="#50FFFFFF"/>
                                        </LinearGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="highlightCircle" Property="Fill">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.7,1">
                                                <GradientStop Offset="0" Color="#50FFFFFF"/>
                                                <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                                <GradientStop Offset="1" Color="#50FFFFFF"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="content" Property="RenderTransform">
                                        <Setter.Value>
                                            <TranslateTransform Y="0.5" X="0.5"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FFD10202"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CircleButtonMaxmize" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}"/>
                <Setter Property="Background" Value="#FFF3872D"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Ellipse Fill="{TemplateBinding Background}"/>
                                <Ellipse>
                                    <Ellipse.Fill>
                                        <RadialGradientBrush>
                                            <GradientStop Offset="0" Color="#00000000"/>
                                            <GradientStop Offset="0.88" Color="#00000000"/>
                                            <GradientStop Offset="1" Color="#80000000"/>
                                        </RadialGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse Margin="10" x:Name="highlightCircle" >
                                    <Ellipse.Fill >
                                        <LinearGradientBrush >
                                            <GradientStop Offset="0" Color="#50FFFFFF"/>
                                            <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                            <GradientStop Offset="1" Color="#50FFFFFF"/>
                                        </LinearGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="highlightCircle" Property="Fill">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.7,1">
                                                <GradientStop Offset="0" Color="#50FFFFFF"/>
                                                <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                                <GradientStop Offset="1" Color="#50FFFFFF"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="content" Property="RenderTransform">
                                        <Setter.Value>
                                            <TranslateTransform Y="0.5" X="0.5"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FFAA7C01"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CircleButtonMinimeze" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}"/>
                <Setter Property="Background" Value="#FF96FF19"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Ellipse Fill="{TemplateBinding Background}"/>
                                <Ellipse>
                                    <Ellipse.Fill>
                                        <RadialGradientBrush>
                                            <GradientStop Offset="0" Color="#00000000"/>
                                            <GradientStop Offset="0.88" Color="#00000000"/>
                                            <GradientStop Offset="1" Color="#80000000"/>
                                        </RadialGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse Margin="10" x:Name="highlightCircle" >
                                    <Ellipse.Fill >
                                        <LinearGradientBrush >
                                            <GradientStop Offset="0" Color="#50FFFFFF"/>
                                            <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                            <GradientStop Offset="1" Color="#50FFFFFF"/>
                                        </LinearGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="highlightCircle" Property="Fill">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.7,1">
                                                <GradientStop Offset="0" Color="#50FFFFFF"/>
                                                <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                                <GradientStop Offset="1" Color="#50FFFFFF"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="content" Property="RenderTransform">
                                        <Setter.Value>
                                            <TranslateTransform Y="0.5" X="0.5"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FF4AAC12"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="TextBox" x:Key="Textbox1">
                <Setter Property="Padding" Value="7"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Foreground" Value="#000"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="MinHeight" Value="18"/>
                <Setter Property="MinWidth" Value="250"/>
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontFamily" Value="Champagne &amp; Limousines"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="border"
                            CornerRadius="10"
                            BorderBrush="#000"
                            BorderThickness="2"
                            Background="#fff"
                            >
                                <ScrollViewer x:Name="PART_ContentHost"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="#3E3E46"/>
                                    <Setter Property="Foreground" Value="#3E3E46" />

                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter Property="Foreground" Value="#00AAEB" />
                                    <Setter Property="BorderBrush" TargetName="border" Value="#00AAEB"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="PasswordBox" x:Key="PasswordBox1">
                <Setter Property="Padding" Value="7"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Foreground" Value="#000"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="MinHeight" Value="18"/>
                <Setter Property="MinWidth" Value="250"/>
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontFamily" Value="Champagne &amp; Limousines"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                            <Border x:Name="border"
                            CornerRadius="10"
                            BorderBrush="#000"
                            BorderThickness="2"
                            Background="#fff"
                            >
                                <ScrollViewer x:Name="PART_ContentHost"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="#3E3E46"/>
                                    <Setter Property="Foreground" Value="#3E3E46" />

                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter Property="Foreground" Value="#00AAEB" />
                                    <Setter Property="BorderBrush" TargetName="border" Value="#00AAEB"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type Button}" x:Key="ButtonLogin">
                <Setter Property="Background" Value="#373737" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="SnapsToDevicePixels" Value="True" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="4" Background="{TemplateBinding Background}">
                                <Grid>
                                    <Path x:Name="PathIcon" Width="15" Height="25" Stretch="Fill" Fill="#00AAEB" HorizontalAlignment="Left" Margin="17,0,0,0" Data="F1 M 30.0833,22.1667L 50.6665,37.6043L 50.6665,38.7918L 30.0833,53.8333L 30.0833,22.1667 Z "/>
                                    <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#E59400" />
                                    <Setter Property="Foreground" Value="White" />
                                    <Setter TargetName="PathIcon" Property="Fill" Value="Black" />
                                </Trigger>

                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="OrangeRed" />
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--#endregion-->

            <!--Window Brushes Color Sheme-->
            <!--#Region Brushes-->
            <SolidColorBrush x:Key="DefaultBackgroundBrush"
                          Color="#16181E"/>

            <SolidColorBrush x:Key="CanvasBrush"
                          Color="#20202C"/>

            <SolidColorBrush x:Key="PrimaryBrush"
                          Color="#00AAEB"/>

            <SolidColorBrush x:Key="SecondaryBrush"
                          Color="White"/>

            <SolidColorBrush x:Key="TertiaryBrush"
                          Color="#E53E46"/>

            <SolidColorBrush x:Key="DimBrush"
                          Color="#3E3E46"/>
            <!--#endregion-->

            <!--#region Top Navigation Style-->
            <Style x:Key="TopNavigationStyle"
                   TargetType="{x:Type RadioButton}">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource SecondaryBrush}"/>
                <Setter Property="Width" Value="80"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Grid
                                Background="{TemplateBinding Background}">
                                <ContentPresenter
                                    x:Name="content"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion-->

            <!--#region CHECKBOX STYLE-->
            <Style TargetType="{x:Type CheckBox}" x:Key="CheckBox_RadioButtonStyle">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background" Value="#F4F4F4"/>
                <Setter Property="BorderBrush" Value="#8E8F8F"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="1" SnapsToDevicePixels="True" 
Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Unchecked"/>
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="tick" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Indeterminate"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Ellipse x:Name="blackframe" Stroke="{StaticResource PrimaryBrush}" Fill="{StaticResource SecondaryBrush}" Width="16" Height="16"/>
                                <Ellipse x:Name="background" Margin="2" Fill="{StaticResource CanvasBrush}" Width="12" Height="12"/>
                                <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" Margin="5,0,0,0"/>
                                <Path x:Name="tick" Fill="{StaticResource TertiaryBrush}" Data="F1 M 4.325,7.852 C 4.175,7.852 4.026,7.807 3.900,7.720 L 0.325,5.262 C -0.016,5.027 -0.103,4.560 0.132,4.219 C 0.367,3.877 0.833,3.792 1.175,4.025 L 4.091,6.030 L 7.478,0.365 C 7.690,0.010 8.151,-0.107 8.506,0.106 C 8.861,0.319 8.978,0.779 8.765,1.135 L 4.969,7.486 C 4.863,7.664 4.688,7.790 4.485,7.834 C 4.432,7.846 4.378,7.852 4.325,7.852 L 4.325,7.852 Z" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion-->

            <!--#region LOADING SPINNER-->
            <Color x:Key="FilledColor" A="255" B="155" R="155" G="155"/>
            <Color x:Key="UnfilledColor" A="0" B="155" R="155" G="155"/>

            <Style x:Key="BusyAnimationStyle" TargetType="Control">
                <Setter Property="Background" Value="#7F000000"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="Animation0" BeginTime="00:00:00.0" RepeatBehavior="Forever">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse0" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                        <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                        <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>

                                <Storyboard x:Key="Animation1" BeginTime="00:00:00.2" RepeatBehavior="Forever">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse1" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                        <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                        <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>

                                <Storyboard x:Key="Animation2" BeginTime="00:00:00.4" RepeatBehavior="Forever">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse2" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                        <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                        <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>

                                <Storyboard x:Key="Animation3" BeginTime="00:00:00.6" RepeatBehavior="Forever">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse3" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                        <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                        <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>

                                <Storyboard x:Key="Animation4" BeginTime="00:00:00.8" RepeatBehavior="Forever">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse4" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                        <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                        <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>

                                <Storyboard x:Key="Animation5" BeginTime="00:00:01.0" RepeatBehavior="Forever">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse5" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                        <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                        <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>

                                <Storyboard x:Key="Animation6" BeginTime="00:00:01.2" RepeatBehavior="Forever">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse6" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                        <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                        <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>

                                <Storyboard x:Key="Animation7" BeginTime="00:00:01.4" RepeatBehavior="Forever">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse7" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                        <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                        <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsVisible" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource Animation0}" x:Name="Storyboard0" />
                                        <BeginStoryboard Storyboard="{StaticResource Animation1}" x:Name="Storyboard1"/>
                                        <BeginStoryboard Storyboard="{StaticResource Animation2}" x:Name="Storyboard2"/>
                                        <BeginStoryboard Storyboard="{StaticResource Animation3}" x:Name="Storyboard3"/>
                                        <BeginStoryboard Storyboard="{StaticResource Animation4}" x:Name="Storyboard4"/>
                                        <BeginStoryboard Storyboard="{StaticResource Animation5}" x:Name="Storyboard5"/>
                                        <BeginStoryboard Storyboard="{StaticResource Animation6}" x:Name="Storyboard6"/>
                                        <BeginStoryboard Storyboard="{StaticResource Animation7}" x:Name="Storyboard7"/>
                                    </Trigger.EnterActions>

                                    <Trigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="Storyboard0"/>
                                        <StopStoryboard BeginStoryboardName="Storyboard1"/>
                                        <StopStoryboard BeginStoryboardName="Storyboard2"/>
                                        <StopStoryboard BeginStoryboardName="Storyboard3"/>
                                        <StopStoryboard BeginStoryboardName="Storyboard4"/>
                                        <StopStoryboard BeginStoryboardName="Storyboard5"/>
                                        <StopStoryboard BeginStoryboardName="Storyboard6"/>
                                        <StopStoryboard BeginStoryboardName="Storyboard7"/>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>

                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <Grid>
                                    <Canvas Height="60" Width="60">
                                        <Canvas.Resources>
                                            <Style TargetType="Ellipse">
                                                <Setter Property="Width" Value="15"/>
                                                <Setter Property="Height" Value="15" />
                                                <Setter Property="Fill" Value="#009B9B9B" />
                                            </Style>
                                        </Canvas.Resources>

                                        <Ellipse x:Name="ellipse0" Canvas.Left="1.75" Canvas.Top="21"/>
                                        <Ellipse x:Name="ellipse1" Canvas.Top="7" Canvas.Left="6.5"/>
                                        <Ellipse x:Name="ellipse2" Canvas.Left="20.5" Canvas.Top="0.75"/>
                                        <Ellipse x:Name="ellipse3" Canvas.Left="34.75" Canvas.Top="6.75"/>
                                        <Ellipse x:Name="ellipse4" Canvas.Left="40.5" Canvas.Top="20.75" />
                                        <Ellipse x:Name="ellipse5" Canvas.Left="34.75" Canvas.Top="34.5"/>
                                        <Ellipse x:Name="ellipse6" Canvas.Left="20.75" Canvas.Top="39.75"/>
                                        <Ellipse x:Name="ellipse7" Canvas.Top="34.25" Canvas.Left="7" />
                                        <Ellipse Width="39.5" Height="39.5" Canvas.Left="8.75" Canvas.Top="8" Visibility="Hidden"/>
                                    </Canvas>
                                    <Label Content="{Binding Path=Text}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion-->

        </ResourceDictionary>
    </Application.Resources>
</Application>
